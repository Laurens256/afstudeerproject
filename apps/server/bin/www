#!/usr/bin/env node

const ngrok = require('@ngrok/ngrok');
require('dotenv').config();
const nodemon = require('nodemon');
const path = require('path');

const { 
	NGROK_AUTH_TOKEN, 
	NGROK_URL, 
	PORT = 3001, 
	NODE_ENV = 'dev' 
} = process.env; 
const BASE_PATH = path.resolve(__dirname, '..');

(async () => {
	const listener = await ngrok.forward({
		addr: PORT,
		authtoken: NGROK_AUTH_TOKEN,
		region: 'eu',
		domain: NGROK_URL,
	});
	console.log(`Ingress established at: ${listener.url()}`);

	if (NODE_ENV === 'dev') {
		nodemon({
			script: 'src/app.ts',
			env: { PORT, NGROK: listener.url() },
			ext: 'ts json',
			exec: 'node --inspect=0.0.0.0:9229 --require ts-node/register src/app.ts'
		})
			.on('restart', (files) => {
				const filesStr = files.map((file) => file.replace(BASE_PATH, '')).join(', ');
				console.log(`Server restarted due to changes in: ${filesStr}`);
			})
			.on('quit', async () => {
				console.log('The application has quit, closing ngrok tunnel');
				await listener.close();
				process.exit(0);
			});
	} else {
		console.log('Starting server in production mode');
		require('../dist/app');
	}
})();
